version: '3.8'

networks:
  rentall-network:
    driver: bridge

services:
  db:
    image: postgres:16-alpine
    
    container_name: mi_postgres_db
    
    restart: unless-stopped
    
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: rentall_db
    
    # Mapea los puertos -> "[PUERTO_EN_TU_MAQUINA]:[PUERTO_EN_EL_CONTENEDOR]"
    # Esto expone el servicio a la red local en el puerto 5432
    ports:
      - "5432:5432"

    networks:
      - rentall-network

    volumes:
      - postgres_data:/var/lib/postgresql/data

  minio:
    image: minio/minio:latest
    container_name: storage_minio
    restart: unless-stopped
    environment:
      MINIO_ROOT_USER: root
      MINIO_ROOT_PASSWORD: d124e0ce30
    ports:
      # Puerto para la API de MinIO
      - "9000:9000"
      # Puerto para la consola web de MinIO
      - "9001:9001"
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"

    networks:
      - rentall-network

    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
      interval: 30s
      timeout: 10s
      retries: 5

  backend:
    build:
      context: ../
      dockerfile: Dockerfile.dev
    container_name: rentall_backend
    restart: unless-stopped

    environment:
      - DEV_MODE=${DEV_MODE}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - MINIO_ENDPOINT=${MINIO_ENDPOINT}
      - MINIO_PORT=${MINIO_PORT}
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY}
      - MINIO_USE_SSL=${MINIO_USE_SSL}
      - MINIO_BUCKET_NAME=${MINIO_BUCKET_NAME}
    ports:
      - "3000:3000"
    volumes:
      # Monta el c√≥digo fuente para reflejar cambios en tiempo real (hot-reloading)
      - ../src:/usr/src/app/src
      # Monta la carpeta dist para que los archivos compilados persistan
      - ../dist:/usr/src/app/dist
      # Evita que la carpeta node_modules local sobreescriba la del contenedor
      - /usr/src/app/node_modules
    networks:
      - rentall-network
    depends_on:
      - db
      - minio


  adminer:
    image: adminer
    restart: always
    ports:
      - "8080:8080"
    
    networks:
      - rentall-network
      
volumes:
  postgres_data:
  minio_data: